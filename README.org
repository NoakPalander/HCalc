#+title: HCalc

** Example
#+begin_src
λ 1 + 2
> 3.0
λ 15 - 2
> 13.0
λ 200 + 15 * (3 - 29 / 3)
> 100.0
#+end_src

** Running HCalc:
#+begin_src
$ cabal run HCalc
#+end_src

** Tests
Running all tests can be done via the shell file:
#+begin_src
$ chmod +x tests.sh # make it executable
$ ./tests.sh        # runs all hspec tests with sensible defaults
#+end_src

Or specific ones via:
#+begin_src
$ cabal test <test-suite> --test-show-details=direct --test-option=--format=progress
#+end_src

** Project sturcture
#+begin_src
├── HCalc.cabal - Project configuration
├── app
│   └── Main.hs - Main application
├── src
│   ├── Converter.hs - Converts infix to RPN
│   ├── Error.hs     - Errors types
│   ├── Parser.hs    - Parses the expressions
│   ├── Queue.hs     - Queue data type
│   ├── Stack.hs     - Stack data type
│   ├── Token.hs     - Token sum type and utilities
│   └── Tokenizer.hs - Tokenizes infix expressions
├── test
│   ├── test-converter.hs - Unit tests for the converter
│   ├── test-parser.hs    - Unit tests for the parser
│   └── test-tokenizer.hs - Unit tests for the tokenizer
└── tests.sh              - Runs all tests
#+end_src
